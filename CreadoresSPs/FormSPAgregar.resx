<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BAnterior.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAMdJREFUWEftl+EO
        wBAMhD363tyYNGaYq6Ztskwi/kzuc65DCH+TORDT9NxdWgwxugEUcSeAKn4c5g7cVp4cMAZoxZP/lgC9
        uCHAWNwIYC7eAlAYkRH+Z7yLEwCVIzIyQrsWzwDcDgLoiIOZ0RMHAHTFIYC8R9c+bewvMgfIQAHQggAA
        co3qQYAAehAMAB0IJsAagvLCGTeucPNM1BUhZ4Do8jKG2LAUPokGH/YQxgB9JhwAWggngIcTng8TRwco
        o6LSklTEd+aesmXjdVz2nhcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="BSiguiente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAMZJREFUWEftl0sO
        wCAIRD26N6dSNcb4KWhxuqgJYWHNvEygqHP/2nOAwnEO2CJHBIWIAECIJI6DKADBBoQTNQAAogU4DNEH
        2ITIbSXLdwcMYqE7Slvl9pLkEcCCE2NLZyJPewonbAAUTtgBCCFsAQQQtgDek+OYTFA7AIE4z3QbAKG4
        DYBC/H0ApXgE4ErNB6W59yNaEM/3OtkMiJXcr5kNce3lsgU4KN7WzGHxGgAgXgBA4jUA6IGSbkO41xH0
        VaRt2W9+fwE2Ze9QHJkC1wAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="BCancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhIAAgAPcAADUUFM7ExI6OjuMyMscpKWZmZtyCgq0pKebm5vdkZI4aGrCwsOSqqvXJyWQpKc47
        O/b5+fNSUsOAgIFzc97e3t+SksJERPRDQ/Nzc+3f38VKSquXl5onJ9+1tdbX151ycjooKLShofXn58Sq
        qrc9Pf+EhP+ZmcxmZuhERIYaGtUzM7aenmZmZv61tZx/f/hLS//W1ospKf7e3qWlpfdbW5kzM9PExLy8
        vMmzs641Nfbw8PX+/veEhPZ6epmZmcQwMP+mpubV1dVCQrFXV/Hl5fRpacpcXOhLS+fd3d87O+mZmb6T
        k0IeHtp0dP/MzIcoKMGnp/+MjGwnJ9jPz70xMeY6Oqg5OcWdnf+Zmf+9vdOvr/9RUf+trf07O+BMTLh/
        f7pAQLe3t350dP5KSswzM0EpKYR4eKiamt3U1NC8vO/v7//v7/mQkHgrK8ApKd9CQtU7O+47O/9mZu1B
        Qf9ycv9aWqo+PtqNjf339/7l5f97e5kzM9wwMNhHR+JmZq9+frqIiMzMzOrw8DsvL/5DQ72kpK2jo++j
        o9qamswqKqUnJ9zPz8CxsfJKSuC7u4UkJP9mZqdDQ////zcTE9FBQbYwMLQpKcWUlP7ExPlSUrVCQsuz
        s66cnKEwMM2np49/f8mPj////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH5BAEAAKEALAAAAAAgACAAAAj/AEMJHEiwoMGDCAsWEkLpAaWGDyI+gGPBQ0KEK7Y4gcGxI0cnTlr0
        sXiR4IoXTvLIWMmSpRNMJsCQLBliTBYYIEFiWiMJBqYsLYAA4UFiJsKaXH5mWeqECx5JDVoENWGCTY+i
        CWuaaMGlK5A8khxlkKRl7KEoaHlgkHmwZhShcE0gkIQDjaRCcxGhLVGix1qjoWqWqMqGahQeFCSNsFso
        w44KfEvooUOnCFuBNwjRiczXxBolixSHbvxYj2nKchIksDPw0xbTsOl0kJTGhui7ju9Q3i1HDo0cgQSa
        GdObtxZJjALcJn1HDuredWh0uiFwAqHe2Ot4Qq680BTcOwxk/69DPkKNMNUvkF+f6Qpd294lrUASnjyG
        HuW9xKAeasKcLVus94J7ONiWgQiSIKEDBAZkwgAegviRyRF97FddHABm2Ih7teHh4Yd4NFHBDnhAccSE
        QjzB3wRxjOGiixdcgocIIqxh4406SBDEGhQYMUYjKKTInxhVvDjGC3NcogONTDaJRAY6bILCC428AYeK
        AhFJyJYXXBDHEjoQIeaYY4pAhBqgxAFkEg9gGYoYSXA5xxxVLKFGBnjmqWcGFJxwAQpWkuEmkV3EUcWh
        dSLw5J56BtDHHEnA8cMPj6AXig81xMHHpkkM8AUCQSAh6qikAlKFlT9QoQATwYXiQQFtkLchqwoDDOFB
        ELjmmisSgVjAJhWqAuADBQIhcEMBUkxKRhI/GJLBImjoiisCf/DxALAKACBAq8Ue64CyfEQSBqmknvGD
        CthOsq0aBRlbwLc/kMGHFS4YwskG+G7wARXoVqKAuoGwa5C78MpLwMEIH0wGFf4CLPBBBFMxqQoUy2px
        JQ2vWxLBlnRsiSIgh8xBCg6X1G0BZaQMwsosrzyIxiYXG8ACM9Rs881hcBvzQAhQ4PPPQCNwUUAAOw==
</value>
  </data>
</root>